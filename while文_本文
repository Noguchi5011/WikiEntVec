while文<__EOS__>
while文 (英: while statement) はプログラミング言語において繰り返し(ループ)の制御構造を記述するための文 (statement) である。英語の接続詞 while の意味「〜である間」の通り、継続条件として指定された式(制御式)を評価した値が真である間、ループ本体 (loop body) [1]の処理を繰り返し実行する。
while文では通例、ループの最初に継続条件式を評価する。したがって、継続条件式が偽であった場合はループ本体の処理は一度も実行されない。プログラミング言語によっては、ループの本体を一度実行した後、継続条件式を評価するdo-while文をサポートするものもある。do-while文では継続条件式の真偽にかかわらず、ループ本体の処理が必ず一度は実行される。詳細は当該記事も参照のこと。
なお、関数型言語では通例、whileループは文ではなく式 (expression) として定義される。while式はwhile文よりもプログラム中で記述できる位置に関して柔軟性がある。Haskellのような純粋関数型言語では、ループは常に再帰(末尾再帰)を使って記述するため、whileループの構文をサポートしないものもある。
目次<__EOS__>
例[編集]<__EOS__>
Cおよびそれに類する言語[編集]<__EOS__>
C言語, C++, C#, D, Java, Perlなどでは以下のような構文である。
このループの実行は、次のような手順となる。
「条件」がはじめから偽の場合は、「文」は一度も実行されない。
ループ本体が複数の文からなる場合、ブロック(複文)を使う。
プログラム例[編集]<__EOS__>
これを実行すると、次のように標準出力に出力する。
変数xの初期値は0であり、ループ本体の処理を1回実行するたびにインクリメントされる。xの値が100未満すなわち99のときまではループ本体の処理が実行され、最終的にxの値が100になる。その後、継続条件式を評価するとき、条件は成り立たなくなり、ループは終了する。
ループの脱出と継続[編集]<__EOS__>
ループの脱出と継続の制御に利用できる分岐文を備える言語もある。break文は、ループ本体の複文の途中からであっても、またwhileの条件が成り立っていても、ループ中から抜け出す。continue文はループの途中から、ループ本体の最後に飛び[2]、while文の場合にはそこから先頭に戻って条件の評価となる。
goto文を使える言語では、whileループの脱出にgoto文を使うこともできる。通常はbreak文のほうが好ましいが、多重ループを脱出する場合やswitch文をループ本体に含む場合などでは、goto文のほうが簡潔に記述できる。return文や例外のスローによってループを脱出することのできる言語もある。
Pascal[編集]<__EOS__>
Pascalにおけるwhile文は、C言語系列と概ね同様であり、キーワードとして while と do を使う。一方、do-while文に関しては、repeat-until文が相当するが、キーワードとして repeat と until を使う点が異なるだけでなく、制御式として継続条件ではなく終了条件(真のときループを終了)を記述する点も異なる。
構文[編集]<__EOS__>
LL(1)の単純な構文というPascalのポリシーから、両者で全く違うキーワードを使う設計(デザイン)となっている。
whileでは複数の文を置く場合には begin-end で複文にしなければならないが、repeat-until はそれ自身が暗黙のブロック構文になっているので、セミコロンで区切って複数の文を置くことができる。
Basic[編集]<__EOS__>
Full BASIC(INCITS/ISO/IEC 10279-1991 (R2005) "Information Technology – Programming Languages – Full BASIC")には、ループの多くのパターンに対応する柔軟性のあるDo-Loop文がある。またVisual Basicには、それに加えて伝統的なBASICのWHILEに近いWhile文もある。
構文[編集]<__EOS__>
Visual Basic .NETにおけるWhile文は以下のような構文である[3]。Visual Basicでは While...Wend だが、VB.NETでは While...End While となっている。
Exit While はbreak文、Continue While はcontinue文に相当する機能を持つ。
Do...Loop文は以下のような構文である[4]。
Do の後に While を続ければ、while文に相当し、Loop の後に Until を続ければ、Pascalの repeat-until に相当する。どちらにも条件を付けなければ、単純な無限ループになる。
注[編集]<__EOS__>
関連項目[編集]<__EOS__>
案内メニュー<__EOS__>
個人用ツール <__EOS__>
名前空間 <__EOS__>
変種 拡張 折り畳む <__EOS__>
表示 <__EOS__>
その他 拡張 折り畳む <__EOS__>
検索 <__EOS__>
案内 <__EOS__>
ヘルプ <__EOS__>
ツール <__EOS__>
印刷/書き出し <__EOS__>
他言語版 <__EOS__>