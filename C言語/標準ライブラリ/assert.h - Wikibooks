C言語/標準ライブラリ/assert.h
ヘッダー<assert.h>では、マクロ assert を定義しています。 このマクロは、プログラムが行う仮定を検証し、この仮定が間違っている場合に診断メッセージを表示するために使用することができます。
実行すると、式が偽(つまり0に等しい比較)の場合、assertはstderrに失敗した呼び出しの情報を書き込み、その後abort()を呼び出します。 stderrに書き込まれる情報には以下が含まれます。
目次
マクロ NDEBUG の使用[編集]
プログラマはソースコードを変更することなくアサーションを排除することができます。 マクロ NDEBUG が <assert.h> のインクルード前に定義されている場合、assert マクロは単に次のように定義されます。
のように定義されているため、プログラムには何の影響も与えず、その引数を評価することもありません。したがって、assertに渡される式は、デバッグが無効なときには起こらないので、副作用を「含まない」ものでなければなりません。例えば、以下のようになります。
は、デバッグが無効の場合には行を読み込まず x に値を代入しません。
マクロ[編集]
assertマクロ[編集]
ISO/IEC 9899:2017 § 7.2.1.1 The assert macro[1]。
static_assertマクロ[編集]
静的アサーション[編集]
_Static_assert は、コンパイル時に確定される式に対するアサーションです[2]。
関数[編集]
C99規格では、ヘッダーassert.hで関数を宣言する必要はありません。
注意点[編集]
assertマクロの定義は、ヘッダーassert.hで定義されていないNDEBUGというマクロの状態に依存する。 マクロ NDEBUG は、デバッグ情報を使用しないことを示す。 NDEBUGが定義されている場合、assertは何もしない(引数の評価もしない)式として定義される。 それ以外の場合、assertはテストする式が偽の場合にデバッグ情報を表示する。
脚註[編集]
案内メニュー
個人用ツール
名前空間
変種 拡張 折り畳む
表示
その他 拡張 折り畳む
検索
ナビゲーション
ヘルプ
ツールボックス
印刷/書き出し
他言語版